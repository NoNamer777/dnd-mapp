{
  "openapi": "3.0.0",
  "info": {
    "title": "DnD-Mapp API",
    "description": "Back-end application for the DnD-Mapp platform which handles authentication, and authorization, serves data for the front-end application.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://test.dndmapp.nl.eu.org",
      "description": "Remote test e2e environment."
    },
    {
      "url": "http://localhost:8080",
      "description": "Local dev environment without SSL enabled."
    },
    {
      "url": "https://localhost.dndmapp.net",
      "description": "Local dev environment with SSL enabled."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "301": {
            "description": "Redirects to the front-end application."
          }
        }
      }
    },
    "/server/authentication/authorize": {
      "post": {
        "description": "Step 3 of the authentication process. Generates an authorization code which is a single use code that can be exchanged for a pair of tokens.",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/authentication/challenge": {
      "post": {
        "description": "Step 1 of the authentication process. Receive and store the code challenge generated by a client. The code challenge should be a base64 encoded SHA-256 hash which is generated from a randomly generated code (Also known as the Code Verifier). This code verifier, together with the authorization code, is required later when retrieving the first token pair to gain authorized access to the platfrom.",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/authentication/login": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/authentication/sign-out": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/authentication/sign-up": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/authentication/token": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/ability": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/ability/{abilityId}": {},
    "/server/api/entity": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/entity/by": {},
    "/server/api/race": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/race/{raceId}": {},
    "/server/api/role": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/role/{roleId}": {},
    "/server/api/skill": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/skill/{skillId}": {},
    "/server/api/user": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/api/user/{userId}": {},
    "/server/session": {
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/server/session/{sessionId}": {}
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "description": "A human readable error message",
            "type": "string"
          }
        }
      }
    }
  },
  "security": []
}
